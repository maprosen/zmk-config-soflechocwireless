/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/* END temporary RGB support section */


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adj_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |   ~   |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&mo 4     &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                              &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp TILDE
&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                               &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                               &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE &ext_power EP_TOG &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp RET    &kp SPACE         &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// | F12   |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  | BKSPC |
// | TAB   |  !  |  "  |  #   |  $   |  %   |                   |  &   |  /    |  (    |  )   |   =   |   @   |
// | SHIFT |  '  |  +  |  ?   |  *   |  {   |        |  |       |  }   |  [    |  ]    |  <   |   >   | SHIFT |
//               | GUI | ALT  | CTRL |      |  ENTER |  | SPACE |      | CTRL  | ALT   | GUI  |
            bindings = <
&kp F12   &kp F1      &kp F2      &kp F3          &kp F4           &kp F5                        &kp F6      &kp F7     &kp F8          &kp F9        &kp F10     &kp F11
&kp GRAVE &kp N1      &kp N2      &kp N3          &kp N4           &kp N5                        &kp N6      &kp N7     &kp N8          &kp N9        &kp N0      &kp BSPC
&kp TAB   &kp LS(N1)  &kp LS(N2)  &kp LS(N3)      &kp LS(N4)       &kp LS(N5)                    &kp LS(N6)  &kp LS(N7) &kp LS(N8)      &kp LS(N9)    &kp LS(N0)  &kp RA(V)
&kp LSHFT &kp MINUS   &kp EQUAL   &kp LS(MINUS)   &kp LS(EQUAL)    &kp RA(B)  &trans   &trans    &kp RA(N)   &kp RA(F)  &kp RA(G)       &kp RA(COMMA) &kp RA(DOT) &kp RSHFT
                      &kp LGUI    &kp LALT        &kp LCTRL        &trans     &kp RET  &kp SPACE &trans      &kp RCTRL  &kp RALT        &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |      |      |       |       |      |                 | INS  |      |       |      |       |       |
// |     | Đ    | Š    | Ć     | Č     | Ž    |                 | PGUP | PWRD |   ^   | NWRD |  DWORD| BKSPC |
// |     | đ    | š    | ć     | č     | ž    |                 | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |   | RGB  | CAPS | HOME |  PSCR | END  |       |       |
//              |      |       |       |      |      |   |      |      |      |       |      |
            bindings = <
&trans     &trans       &trans       &trans       &trans       &trans                            &kp INS   &trans          &trans      &trans           &trans        &trans
&trans     &kp LS(SEMI) &kp LS(SQT)  &kp LS(LBKT) &kp LS(RBKT) &trans                            &kp PG_UP &kp LC(LEFT)    &kp UP      &kp LC(RIGHT)    &kp LC(BSPC)  &trans
&trans     &kp SEMI     &kp SQT      &kp LBKT     &kp RBKT     &kp BSLH                          &kp PG_DN &kp LEFT        &kp DOWN    &kp RIGHT        &kp DEL       &kp BSPC
&trans     &kp LC(Y)    &kp LC(X)    &kp LC(C)    &kp LC(V)    &trans  &trans   &rgb_ug RGB_TOG  &kp CLCK  &kp HOME        &kp PSCRN   &kp END          &trans        &trans
                        &trans       &trans       &trans       &trans  &trans   &trans           &trans    &trans          &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adj_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                 |      |      |       |      |       |       |
// |     |      |      |       |       |      |                 |      |      |       |      |       |       |
// |     |RGB_BI|RGB_SI|RGB_HI |RGB_SAI|RGB_CF|                 |BR-UP |MY_COM|       |      |       |       |
// |     |RGB_BD|RGB_SD|RGB_HD |RGB_SAD|RGB_CR|      |   | RGB  |BR-DOW| CALC |       |      |       |       |
//              |      |       |       |      |      |   |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                                 &trans       &trans       &trans   &trans    &trans  &trans
&trans     &trans           &trans          &trans           &trans           &trans                                       &trans       &trans       &trans   &trans    &trans  &trans
&trans     &rgb_ug RGB_BRI  &rgb_ug RGB_SPI &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                              &kp C_BRI_UP &kp LG(E)    &trans   &trans    &trans  &trans
&trans     &rgb_ug RGB_BRD  &rgb_ug RGB_SPD &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_EFR    &trans   &rgb_ug RGB_TOG  &kp C_BRI_DN &kp K_CALC   &trans   &trans    &trans  &trans
                            &trans          &trans           &trans           &trans             &trans   &trans           &trans       &trans       &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        tri_layer {
// ------------------------------------------------------------------------------------------------------------
// |     | F10  | F11  |  F12  |VDSK_L |VDSK_R|                 |  (   |   )  |   [   |   ]  |   {   |   }   |
// |     | F7   | F8   |  F9   |       |      |                 |  +   |   7  |   8   |   9  |   *   |       |
// |     | F4   | F5   |  F6   |       |      |                 |  .   |   4  |   5   |   6  |   ,   |       |
// |     | F1   | F2   |  F3   |       |      |      |   |      |  -   |   1  |   2   |   3  |   /   |       |
//              |      |       |       |      |      |   |      |  0   |      |       |      |
            bindings = <
&trans     &kp F10      &kp F11      &kp F12      &kp LG(LC(LEFT)) &kp LG(LC(RIGHT))                       &kp LS(N8)    &kp LS(N9)   &kp RA(F)  &kp RA(G)    &kp RA(B)      &kp RA(N)
&trans     &kp F7       &kp F8       &kp F9       &trans           &trans                                  &kp EQUAL     &kp N7       &kp N8     &kp N9       &kp LS(EQUAL)  &trans
&trans     &kp F4       &kp F5       &kp F6       &trans           &trans                                  &kp DOT       &kp N4       &kp N5     &kp N6       &kp COMMA      &trans
&trans     &kp F1       &kp F2       &kp F3       &trans           &trans             &trans   &trans      &kp KP_DIVIDE &kp N1       &kp N2     &kp N3       &kp LS(N7)     &trans
                        &trans       &trans       &trans           &kp LSHFT          &trans   &trans      &kp N0        &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
